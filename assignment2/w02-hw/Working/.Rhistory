library(MASS)
data(cats)
cat_model=lm(Hwt ~ Bwt, data=cats)
summary(cat_model)
cat_model$coefficients
predict(cat_model, newdata = data.frame(Bwt = 2.7))
predict(cat_model, newdata = data.frame(Bwt = 4.4))
plot(Hwt ~ Bwt, data=cats,
xlab = "Body Weight (in kg)",
ylab = "Heart Weight (in g)",
main = "heart and body weights of samples of male and female cats",
pch = 20,
cex = 1,
col="grey")
abline(cat_model, lwd=3, col="darkorange")
plot(Hwt ~ Bwt, data=cats,
xlab = "Body Weight (in kg)",
ylab = "Heart Weight (in g)",
main = "heart and body weights of samples of male and female cats",
pch = 20,
cex = 1.5,
col="grey")
abline(cat_model, lwd=3, col="darkorange")
summary(cat_model)$r.squared
get_sd_est <- function(fitted_vals, actual_vals, mle=FALSE){
error = sum((actual_vals-fitted_vals)^2)
if (mle==FALSE) {
return (sqrt(error/(length(actual_vals)-2)))
} else {
return (sqrt(error/length(actual_vals)))
}
}
get_sd_est(cat_model$fitted.values, cats$Hwt)
get_sd_est(cat_model$fitted.values, cats$Hwt, mle=TRUE)
summary(cat_model)$sigma
birthday = 19820517
set.seed(birthday)
x = runif(n = 25, 0, 10)
sim_slr = function(x, beta_0 = 10, beta_1 = 5, sigma = 1) {
n = length(x)
epsilon = rnorm(n, mean = 0, sd = sigma)
y = beta_0 + beta_1 * x + epsilon
data.frame(predictor = x, response = y)
}
sim_data = sim_slr(x = x, beta_0 = 5, beta_1 = -3, sigma = sqrt(10.24))
sim_fit = lm(response ~ predictor, data = sim_data)
sim_fit = lm(response ~ predictor, data = sim_data)
sim_fit$coefficients
plot(response ~ predictor, data = sim_data,
xlab = "Simulated Predictor Variable",
ylab = "Simulated Response Variable",
main = "Simulated Regression Data",
pch  = 20,
cex  = 2,
col  = "grey")
abline(sim_fit, lwd = 3, lty = 1, col = "darkorange")
abline(5, -3, lwd = 3, lty = 2, col = "dodgerblue")
legend("topright", c("Estimate", "Truth"), lty = c(1, 2), lwd = 2,
col = c("darkorange", "dodgerblue"))
plot(response ~ predictor, data = sim_data,
xlab = "Simulated Predictor Variable",
ylab = "Simulated Response Variable",
main = "Simulated Regression Data",
pch  = 20,
cex  = 2,
col  = "grey")
abline(sim_fit, lwd = 3, lty = 1, col = "darkorange")
abline(5, -3, lwd = 3, lty = 2, col = "dodgerblue")
legend("topright", c("Estimate", "Truth"), lty = c(1, 2), lwd = 2,
col = c("darkorange", "dodgerblue"))
beta_hat_1 = rep(0, 1500)
for (i in 1:1500){
sim_data = sim_slr(x = x, beta_0 = 5, beta_1 = -3, sigma = sqrt(10.24))
sim_fit = lm(response ~ predictor, data = sim_data)
beta_hat_1[i]=coef(sim_fit)[2]
}
mean(beta_hat_1)
sd(beta_hat_1)
hist(beta_hat_1,
xlab="Sample beta_hat_1 from simulated data",
main= "Histogram of of beta_hat_1 from simulated data",
col="grey",
border = "darkorange")
birthday = 19820517
set.seed(birthday)
x = runif(n = 75, 0, 10)
beta_hat_1 = rep(0, 2500)
for (i in 1:2500){
sim_data = sim_slr(x = x, beta_0 = 3, beta_1 = 0, sigma = sqrt(4))
sim_fit = lm(response ~ predictor, data = sim_data)
beta_hat_1[i]=coef(sim_fit)[2]
}
beta_hat_1 = rep(0, 2500)
for (i in 1:2500){
sim_data = sim_slr(x = x, beta_0 = 3, beta_1 = 0, sigma = sqrt(4))
sim_fit = lm(response ~ predictor, data = sim_data)
beta_hat_1[i]=coef(sim_fit)[2]
}
hist(beta_hat_1,
xlab="Sample beta_hat_1 from simulated data",
main= "Histogram of of beta_hat_1 from simulated data",
col="grey",
border = "darkorange")
skeptic <- read.csv("skeptic.csv")
skep_fit = lm(response ~ predictor, data = skeptic)
coef(skep_fit)[2]
hist(beta_hat_1,
xlab="Sample beta_hat_1 from simulated data",
main= "Histogram of of beta_hat_1 from simulated data",
col="grey",
border = "darkorange")
abline(v = coef(skep_fit)[2], col = "red")
sum(beta_hat_1 < coef(skep_fit)[["predictor"]])/(length(beta_hat_1))
sum(beta_hat_1 < coef(skep_fit)[["predictor"]])/(length(beta_hat_1)) * 2
z = (coef(skep_fit)[["predictor"]] - mean(beta_hat_1)) / sd(beta_hat_1)
z
data(Ozone, package = "mlbench")
Ozone = Ozone[, c(4, 6, 7, 8)]
colnames(Ozone) = c("ozone", "wind", "humidity", "temp")
Ozone = Ozone[complete.cases(Ozone), ]
w_model = lm(ozone~wind, data=Ozone)
h_model = lm(ozone~humidity, data=Ozone)
t_model = lm(ozone~temp, data=Ozone)
fun_rmse <- function(model){
sqrt(sum(model$residuals ^ 2)/length(model$residuals))
}
df <- data.frame(Model=character(),
RMSE=double(),
RSQUARED=double(),
stringsAsFactors=FALSE)
df[1,]=c("Wind Model", fun_rmse(w_model), summary(w_model)$r.squared)
df[2,]=c("Humidity Model", fun_rmse(h_model), summary(h_model)$r.squared)
df[3,]=c("Temprature Model", fun_rmse(t_model), summary(t_model)$r.squared)
knitr::kable(df)
?knitr
?kable
w_model = lm(ozone~wind, data=Ozone)
h_model = lm(ozone~humidity, data=Ozone)
t_model = lm(ozone~temp, data=Ozone)
fun_rmse <- function(model){
sqrt(sum(model$residuals ^ 2)/length(model$residuals))
}
df <- data.frame(Model=character(),
RMSE=double(),
RSQUARED=double(),
stringsAsFactors=FALSE)
df[1,]=c("Wind Model", fun_rmse(w_model), summary(w_model)$r.squared)
df[2,]=c("Humidity Model", fun_rmse(h_model), summary(h_model)$r.squared)
df[3,]=c("Temprature Model", fun_rmse(t_model), summary(t_model)$r.squared)
knitr::kable(df, format = "html")
w_model = lm(ozone~wind, data=Ozone)
h_model = lm(ozone~humidity, data=Ozone)
t_model = lm(ozone~temp, data=Ozone)
fun_rmse <- function(model){
sqrt(sum(model$residuals ^ 2)/length(model$residuals))
}
df <- data.frame(Model=character(),
RMSE=double(),
RSQUARED=double(),
stringsAsFactors=FALSE)
df[1,]=c("Wind Model", fun_rmse(w_model), summary(w_model)$r.squared)
df[2,]=c("Humidity Model", fun_rmse(h_model), summary(h_model)$r.squared)
df[3,]=c("Temprature Model", fun_rmse(t_model), summary(t_model)$r.squared)
knitr::kable(df, format = "markdown")
