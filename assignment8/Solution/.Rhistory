fit_2 = lm(y ~ x, data = data_2)
data_3 = data.frame(x = runif(n = 40, min = 0, max = 10),
y = rep(x = 0, times = 40))
data_3$y = with(data_3, 2 + 1 * x + rnorm(n = 40, sd = x))
fit_3 = lm(y ~ x, data = data_3)
diagnostics(fit_1, plotit = FALSE)$p_val
diagnostics(fit_2, plotit = FALSE)$decision
diagnostics(fit_1, testit = FALSE, pcol = "black", lcol = "black")
diagnostics(fit_2, testit = FALSE, pcol = "grey", lcol = "green")
diagnostics(fit_3)
diagnostics(fit_2, plotit = FALSE)$decision
diagnostics = function(model,pcol='grey',lcol='dodgerblue',alpha=0.05,plotit=TRUE,testit=TRUE){
p=shapiro.test(resid(model))$p.value
decision=ifelse(p<alpha,"Reject","Fail to Reject")
if (testit==TRUE)
{
return(list("p_val"=p,"decision"=decision))
}
if (plotit==TRUE)
{
par(mfrow = c(1, 2))
plot(fitted(model), resid(model), col = pcol, pch = 20,
xlab = "Fitted", ylab = "Residuals", main = "Fitted vs Residual")
abline(h = 0, col = lcol, lwd = 2)
qqnorm(resid(model), main = "Normal Q-Q Plot", col = pcol)
qqline(resid(model), col = lcol, lwd = 2)
}
}
set.seed(420)
data_1 = data.frame(x = runif(n = 30, min = 0, max = 10),
y = rep(x = 0, times = 30))
data_1$y = with(data_1, 2 + 1 * x + rexp(n = 30))
fit_1 = lm(y ~ x, data = data_1)
data_2 = data.frame(x = runif(n = 20, min = 0, max = 10),
y = rep(x = 0, times = 20))
data_2$y = with(data_2, 5 + 2 * x + rnorm(n = 20))
fit_2 = lm(y ~ x, data = data_2)
data_3 = data.frame(x = runif(n = 40, min = 0, max = 10),
y = rep(x = 0, times = 40))
data_3$y = with(data_3, 2 + 1 * x + rnorm(n = 40, sd = x))
fit_3 = lm(y ~ x, data = data_3)
diagnostics(fit_1, plotit = FALSE)$p_val
diagnostics(fit_2, plotit = FALSE)$decision
diagnostics(fit_1, testit = FALSE, pcol = "black", lcol = "black")
diagnostics(fit_2, testit = FALSE, pcol = "grey", lcol = "green")
diagnostics(fit_3)
diagnostics(fit_3)
diagnostics(fit_3,plotit = TRUE)
diagnostics(fit_3, testit = FALSE)
summary(lm(lpsa~., data=prostate))$r.squared
library(faraway)
install.packages(c("faraway", "ggplot2"))
library(faraway)
library(lmtest)
install.packages("lmtest")
library(faraway)
library(lmtest)
summary(lm(lpsa~., data=prostate))$r.squared
plot(fitted(pros_mod), resid(pros_mod), col = "dodgerblue", pch = 20,
xlab = "Fitted", ylab = "Residuals", main = "Fitted vs Residual")
mod_prost = lm(lpsa~., data=prostate)
summary(mod_prost)$r.squared
plot(fitted(mod_prost), resid(mod_prost), col = "dodgerblue", pch = 20,
xlab = "Fitted", ylab = "Residuals", main = "Fitted vs Residual")
abline(h = 0, col = "orange", lwd = 2)
plot(fitted(mod_prost), resid(mod_prost), col = "dodgerblue", pch = 20,
xlab = "Fitted", ylab = "Residuals", main = "Fitted vs Residual")
abline(h = 0, col = "orange", lwd = 2)
bptest(mod_prost)
qqnorm(resid(mod_prost), main = "Q-Q Plot", col = "dodgerblue")
qqline(resid(mod_prost), col = "dodgerblue", lwd = 2)
shapiro.test(resid(mod_prost))
sum(hatvalues(mod_prost) > 2 * mean(hatvalues(mod_prost)))
prostate$lpsa[hatvalues(mod_prost) > 2 * mean(hatvalues(mod_prost))]
prostate[,hatvalues(mod_prost) > 2 * mean(hatvalues(mod_prost))]
prostate[, hatvalues(mod_prost) > 2 * mean(hatvalues(mod_prost))]
prostate[, c(hatvalues(mod_prost) > 2 * mean(hatvalues(mod_prost)))]
#prostate[, c(hatvalues(mod_prost) > 2 * mean(hatvalues(mod_prost)))]
prostate[, TRUE]
c(hatvalues(mod_prost) > 2 * mean(hatvalues(mod_prost)))
#prostate[[, c(hatvalues(mod_prost) > 2 * mean(hatvalues(mod_prost)))]]
prostate[, TRUE]
prostate[[, c(hatvalues(mod_prost) > 2 * mean(hatvalues(mod_prost)))]]
prostate[c(hatvalues(mod_prost) > 2 * mean(hatvalues(mod_prost))),]
#prostate[, TRUE]
cd_mod_prost = cooks.distance(mod_prost)
prostate[c(cd_mod_prost > 4 / length(cd_mod_prost)),]
mod_prost_fix = lm(lpsa~.,
data = prostate,
subset = cd_mod_prost > 4 / length(cd_mod_prost))
mod_prost_fix = lm(lpsa~.,
data = prostate,
subset = cd_mod_prost > 4 / length(cd_mod_prost))
coef(mod_prost)
coef(mod_prost_fix)
mod_prost_fix = lm(lpsa~.,
data = prostate,
subset = cd_mod_prost <= 4 / length(cd_mod_prost))
coef(mod_prost)
coef(mod_prost_fix)
unname(coef(mod_prost))
unname(coef(mod_prost_fix))
prost_removed = prostate[c(cd_mod_prost > 4 / length(cd_mod_prost)),]
prost_removed = prostate[c(cd_mod_prost > 4 / length(cd_mod_prost)),]
predict(pros_mod, newdata = prost_removed)
prost_removed = prostate[c(cd_mod_prost > 4 / length(cd_mod_prost)),]
predict(mod_prost, newdata = prost_removed)
predict(mod_prost_fix, newdata = prost_removed)
n = 50
set.seed(420)
x_1 = runif(n, 0, 5)
x_2 = runif(n, -2, 2)
set.seed(1)
y_1 = 4 + 1 * x_1 + 0 * x_2 + rnorm(n = n, mean = 0, sd = 1)
fit_1 = lm(y_1 ~ x_1 + x_2)
bptest(fit_1)
set.seed(1)
y_2 = 4 + 1 * x_1 + 0 * x_2 + rnorm(n = n, mean = 0, sd = abs(x_2))
fit_2 = lm(y_2 ~ x_1 + x_2)
bptest(fit_2)
num_sims = 2500
p_val_1 = rep(0, num_sims)
p_val_2 = rep(0, num_sims)
birthday = 19820517
set.seed(birthday)
num_sims = 2500
p_val_1 = rep(0, num_sims)
p_val_2 = rep(0, num_sims)
birthday = 19820517
set.seed(birthday)
for (i in 1:num_sims){
y_1 = 4 + 1 * x_1 + 0 * x_2 + rnorm(n = n, mean = 0, sd = 1)
fit_1 = lm(y_1 ~ x_1 + x_2)
p_fit_1[i]=summary(fit_1)$coefficients[3, "Pr(>|t|)"]
y_2 = 4 + 1 * x_1 + 0 * x_2 + rnorm(n = n, mean = 0, sd = abs(x_2))
fit_2 = lm(y_2 ~ x_1 + x_2)
p_fit_2[i]=summary(fit_2)$coefficients[3, "Pr(>|t|)"]
}
for (i in 1:num_sims){
y_1 = 4 + 1 * x_1 + 0 * x_2 + rnorm(n = n, mean = 0, sd = 1)
fit_1 = lm(y_1 ~ x_1 + x_2)
p_val_1[i]=summary(fit_1)$coefficients[3, "Pr(>|t|)"]
y_2 = 4 + 1 * x_1 + 0 * x_2 + rnorm(n = n, mean = 0, sd = abs(x_2))
fit_2 = lm(y_2 ~ x_1 + x_2)
p_val_2[i]=summary(fit_2)$coefficients[3, "Pr(>|t|)"]
}
c(mean(p_val_1<0.01),mean(p_val_1<0.05), mean(p_val_1<0.10))
c(mean(p_val_1<0.01),mean(p_val_1<0.05), mean(p_val_1<0.10))
c(mean(p_val_2<0.01),mean(p_val_2<0.05), mean(p_val_2<0.10))
p_val_1_crit = c(mean(p_val_1<0.01),mean(p_val_1<0.05), mean(p_val_1<0.10))
p_val_2_crit = c(mean(p_val_2<0.01),mean(p_val_2<0.05), mean(p_val_2<0.10))
data.frame("p_val_1"=p_val_1_crit, "p_val_2"=p_val_2_crit)
n = 50
set.seed(420)
x_1 = runif(n, 0, 5)
x_2 = runif(n, -2, 2)
set.seed(1)
y_1 = 4 + 1 * x_1 + 0 * x_2 + rnorm(n = n, mean = 0, sd = 1)
fit_1 = lm(y_1 ~ x_1 + x_2)
bptest(fit_1)
set.seed(1)
y_2 = 4 + 1 * x_1 + 0 * x_2 + rnorm(n = n, mean = 0, sd = abs(x_2))
fit_2 = lm(y_2 ~ x_1 + x_2)
bptest(fit_2)
num_sims = 2500
p_val_1 = rep(0, num_sims)
p_val_2 = rep(0, num_sims)
birthday = 19820517
set.seed(birthday)
for (i in 1:num_sims){
y_1 = 4 + 1 * x_1 + 0 * x_2 + rnorm(n = n, mean = 0, sd = 1)
fit_1 = lm(y_1 ~ x_1 + x_2)
p_val_1[i]=summary(fit_1)$coefficients[3, "Pr(>|t|)"]
y_2 = 4 + 1 * x_1 + 0 * x_2 + rnorm(n = n, mean = 0, sd = abs(x_2))
fit_2 = lm(y_2 ~ x_1 + x_2)
p_val_2[i]=summary(fit_2)$coefficients[3, "Pr(>|t|)"]
}
for (i in 1:num_sims){
y_1 = 4 + 1 * x_1 + 0 * x_2 + rnorm(n = n, mean = 0, sd = 1)
fit_1 = lm(y_1 ~ x_1 + x_2)
p_val_1[i]=summary(fit_1)$coefficients[3, "Pr(>|t|)"]
y_2 = 4 + 1 * x_1 + 0 * x_2 + rnorm(n = n, mean = 0, sd = abs(x_2))
fit_2 = lm(y_2 ~ x_1 + x_2)
p_val_2[i]=summary(fit_2)$coefficients[3, "Pr(>|t|)"]
}
p_val_1_crit = c(mean(p_val_1<0.01),mean(p_val_1<0.05), mean(p_val_1<0.10))
p_val_2_crit = c(mean(p_val_2<0.01),mean(p_val_2<0.05), mean(p_val_2<0.10))
data.frame("p_val_1"=p_val_1_crit, "p_val_2"=p_val_2_crit)
num_sims = 2500
p_val_1 = rep(0, num_sims)
p_val_2 = rep(0, num_sims)
birthday = 19930501
set.seed(birthday)
for (i in 1:num_sims){
y_1 = 4 + 1 * x_1 + 0 * x_2 + rnorm(n = n, mean = 0, sd = 1)
fit_1 = lm(y_1 ~ x_1 + x_2)
p_val_1[i]=summary(fit_1)$coefficients[3, "Pr(>|t|)"]
y_2 = 4 + 1 * x_1 + 0 * x_2 + rnorm(n = n, mean = 0, sd = abs(x_2))
fit_2 = lm(y_2 ~ x_1 + x_2)
p_val_2[i]=summary(fit_2)$coefficients[3, "Pr(>|t|)"]
}
p_val_1_crit = c(mean(p_val_1<0.01),mean(p_val_1<0.05), mean(p_val_1<0.10))
p_val_2_crit = c(mean(p_val_2<0.01),mean(p_val_2<0.05), mean(p_val_2<0.10))
data.frame("p_val_1"=p_val_1_crit, "p_val_2"=p_val_2_crit)
p_val_1_crit = c(mean(p_val_1<0.01),mean(p_val_1<0.05), mean(p_val_1<0.10))
p_val_2_crit = c(mean(p_val_2<0.01),mean(p_val_2<0.05), mean(p_val_2<0.10))
df = data.frame("p_val_1"=p_val_1_crit, "p_val_2"=p_val_2_crit)
row.names.data.frame("p<0.01","p<0.05","p<0.10")
p_val_1_crit = c(mean(p_val_1<0.01),mean(p_val_1<0.05), mean(p_val_1<0.10))
p_val_2_crit = c(mean(p_val_2<0.01),mean(p_val_2<0.05), mean(p_val_2<0.10))
df = data.frame("p_val_1"=p_val_1_crit, "p_val_2"=p_val_2_crit)
row.names.data.frame(df, "p<0.01","p<0.05","p<0.10")
?row.names.data.frame
p_val_1_crit = c(mean(p_val_1<0.01),mean(p_val_1<0.05), mean(p_val_1<0.10))
p_val_2_crit = c(mean(p_val_2<0.01),mean(p_val_2<0.05), mean(p_val_2<0.10))
df = data.frame("p_val_1"=p_val_1_crit, "p_val_2"=p_val_2_crit)
row.names(df) =  c("p<0.01","p<0.05","p<0.10")
p_val_1_crit = c(mean(p_val_1<0.01),mean(p_val_1<0.05), mean(p_val_1<0.10))
p_val_2_crit = c(mean(p_val_2<0.01),mean(p_val_2<0.05), mean(p_val_2<0.10))
df = data.frame("p_val_1"=p_val_1_crit, "p_val_2"=p_val_2_crit)
row.names(df) =  c("p<0.01","p<0.05","p<0.10")
df
library(faraway)
mod_corr=lm(loss~Fe, data=corrosion)
par(mfrow=c(1,3))
mod_corr=lm(loss~Fe, data=corrosion)
par(mfrow=c(1,3))
plot(loss ~ Fe, data=corrosion, col="grey",
ylab="Weight loss in mg",
xlab="Iron content in percent",
main="Iron content vs Weight loss",
pch=20, cex=1)
abline(mod_corr, lwd = 2, col = "darkorange")
mod_corr=lm(loss~Fe, data=corrosion)
par(mfrow=c(1,3))
plot(loss ~ Fe, data=corrosion, col="grey",
ylab="Weight loss in mg",
xlab="Iron content in percent",
main="Iron content vs Weight loss",
pch=20, cex=3)
abline(mod_corr, lwd = 2, col = "darkorange")
mod_corr=lm(loss~Fe, data=corrosion)
par(mfrow=c(1,3))
plot(loss ~ Fe, data=corrosion, col="grey",
ylab="Weight loss in mg",
xlab="Iron content in percent",
main="Iron content vs Weight loss",
pch=20, cex=2)
abline(mod_corr, lwd = 2, col = "darkorange")
mod_corr=lm(loss~Fe, data=corrosion)
par(mfrow=c(1,3))
plot(loss ~ Fe, data=corrosion, col="grey",
ylab="Weight loss in mg",
xlab="Iron content in percent",
main="Iron content vs Weight loss",
pch=20, cex=2)
abline(mod_corr, lwd = 2, col = "darkorange")
plot(fitted(mod_corr), resid(mod_corr), col = "grey", pch = 20,
xlab = "Fitted", ylab = "Residuals", main = "Fitted vs Residual")
abline(h = 0, col = "darkorange", lwd = 2)
mod_corr=lm(loss~Fe, data=corrosion)
par(mfrow=c(1,3))
plot(loss ~ Fe, data=corrosion, col="grey",
ylab="Weight loss in mg",
xlab="Iron content in percent",
main="Iron content vs Weight loss",
pch=20, cex=2)
abline(mod_corr, lwd = 2, col = "darkorange")
plot(fitted(mod_corr), resid(mod_corr), col = "grey", pch = 20, cex=2,
xlab = "Fitted", ylab = "Residuals", main = "Fitted vs Residual")
abline(h = 0, col = "darkorange", lwd = 2)
mod_corr=lm(loss~Fe, data=corrosion)
par(mfrow=c(1,3))
plot(loss ~ Fe, data=corrosion, col="grey",
ylab="Weight loss in mg",
xlab="Iron content in percent",
main="Iron content vs Weight loss",
pch=20, cex=2)
abline(mod_corr, lwd = 2, col = "darkorange")
plot(fitted(mod_corr), resid(mod_corr), col = "grey", pch = 20, cex=2,
xlab = "Fitted", ylab = "Residuals", main = "Fitted vs Residual")
abline(h = 0, col = "darkorange", lwd = 2)
qqnorm(resid(mod_corr), main = "Q-Q Plot", col = "grey")
qqline(resid(mod_corr), col = "darkorange", lwd = 2)
mod_corr=lm(loss~Fe, data=corrosion)
par(mfrow=c(1,3))
plot(loss ~ Fe, data=corrosion, col="grey",
ylab="Weight loss in mg",
xlab="Iron content in percent",
main="Iron content vs Weight loss",
pch=20, cex=2)
abline(mod_corr, lwd = 2, col = "darkorange")
plot(fitted(mod_corr), resid(mod_corr), col = "grey", pch = 20, cex=2,
xlab = "Fitted", ylab = "Residuals", main = "Fitted vs Residual")
abline(h = 0, col = "darkorange", lwd = 2)
qqnorm(resid(mod_corr), main = "Q-Q Plot", col = "grey", pch = 20, cex=2)
qqline(resid(mod_corr), col = "darkorange", lwd = 2)
bptest(mod_corr)
shapiro.test(resid(mod_corr))
mod_corr1=lm(loss~Fe + I(Fe^2), data=corrosion)
mod_corr2=lm(loss~Fe + I(Fe^2) + I(Fe^3), data=corrosion)
mod_corr3=lm(loss~Fe + I(Fe^2) + I(Fe^3) + I(Fe^4), data=corrosion)
plot(fitted(mod_corr1), resid(mod_corr1), col = "grey", pch = 20,
xlab = "Fitted", ylab = "Residuals", main = "Fitted vs Residual for degree 2")
abline(h = 0, col = "darkorange", lwd = 2)
mod_corr1=lm(loss~Fe + I(Fe^2), data=corrosion)
mod_corr2=lm(loss~Fe + I(Fe^2) + I(Fe^3), data=corrosion)
mod_corr3=lm(loss~Fe + I(Fe^2) + I(Fe^3) + I(Fe^4), data=corrosion)
plot(fitted(mod_corr1), resid(mod_corr1), col = "darkgrey", pch = 20,
xlab = "Fitted", ylab = "Residuals", main = "Fitted vs Residual for degree 2")
abline(h = 0, col = "darkorange", lwd = 2)
mod_corr1=lm(loss~Fe + I(Fe^2), data=corrosion)
mod_corr2=lm(loss~Fe + I(Fe^2) + I(Fe^3), data=corrosion)
mod_corr3=lm(loss~Fe + I(Fe^2) + I(Fe^3) + I(Fe^4), data=corrosion)
plot(fitted(mod_corr1), resid(mod_corr1), col = "darkgrey", pch = 20, cex=2,
xlab = "Fitted", ylab = "Residuals", main = "Fitted vs Residual for degree 2")
abline(h = 0, col = "darkorange", lwd = 2)
mod_corr1=lm(loss~Fe + I(Fe^2), data=corrosion)
mod_corr2=lm(loss~Fe + I(Fe^2) + I(Fe^3), data=corrosion)
mod_corr3=lm(loss~Fe + I(Fe^2) + I(Fe^3) + I(Fe^4), data=corrosion)
par(mfrow=c(1,3))
plot(fitted(mod_corr1), resid(mod_corr1), col = "darkgrey", pch = 20, cex=2,
xlab = "Fitted", ylab = "Residuals", main = "Fitted vs Residual for degree 2")
abline(h = 0, col = "darkorange", lwd = 2)
plot(fitted(mod_corr2), resid(mod_corr2), col = "darkgrey", pch = 20, cex=2,
xlab = "Fitted", ylab = "Residuals", main = "Fitted vs Residual for degree 3")
abline(h = 0, col = "darkorange", lwd = 2)
plot(fitted(mod_corr3), resid(mod_corr3), col = "darkgrey", pch = 20, cex=2,
xlab = "Fitted", ylab = "Residuals", main = "Fitted vs Residual for degree 4")
abline(h = 0, col = "darkorange", lwd = 2)
mod_corr1=lm(loss~Fe + I(Fe^2), data=corrosion)
mod_corr2=lm(loss~Fe + I(Fe^2) + I(Fe^3), data=corrosion)
mod_corr3=lm(loss~Fe + I(Fe^2) + I(Fe^3) + I(Fe^4), data=corrosion)
par(mfrow=c(1,3))
plot(fitted(mod_corr1), resid(mod_corr1), col = "darkgrey", pch = 20, cex=2,
xlab = "Fitted", ylab = "Residuals", main = "Fitted vs Residual - degree 2")
abline(h = 0, col = "darkorange", lwd = 2)
plot(fitted(mod_corr2), resid(mod_corr2), col = "darkgrey", pch = 20, cex=2,
xlab = "Fitted", ylab = "Residuals", main = "Fitted vs Residual - degree 3")
abline(h = 0, col = "darkorange", lwd = 2)
plot(fitted(mod_corr3), resid(mod_corr3), col = "darkgrey", pch = 20, cex=2,
xlab = "Fitted", ylab = "Residuals", main = "Fitted vs Residual - degree 4")
abline(h = 0, col = "darkorange", lwd = 2)
names(bptest(mod_corr1))
bptest(mod_corr1)$p.value
c(bptest(mod_corr1)$p.value, bptest(mod_corr2)$p.value, bptest(mod_corr3)$p.value)
anova(mod_corr1, mod_corr2, mod_corr3)
qqnorm(resid(mod_corr2), main = "Q-Q Plot", col = "darkgrey")
qqline(resid(mod_corr2), col = "dodgerblue", lwd = 2)
qqnorm(resid(mod_corr2), main = "Q-Q Plot", col = "darkgrey",pch = 20, cex=2)
qqline(resid(mod_corr2), col = "dodgerblue", lwd = 2)
qqnorm(resid(mod_corr2), main = "Q-Q Plot", col = "darkgrey",pch = 20, cex=1.5)
qqline(resid(mod_corr2), col = "dodgerblue", lwd = 2)
qqnorm(resid(mod_corr2), main = "Q-Q Plot", col = "darkgrey",pch = 20, cex=1.5)
qqline(resid(mod_corr2), col = "dodgerblue", lwd = 2)
shapiro.test(resid(mod_corr2))
cd_mod_corr2=cooks.distance(mod_corr2)
corrosion[cd_mod_corr2 > 4 / length(cd_mod_corr2), ]
library(ggplot2)
mod_d =lm(price~carat, data=diamonds)
summary(mod_d)
plot(price~carat, data=diamonds, col="darkgrey",
ylab="Price in US dollars",
xlab="Weight of diamond",
main="Price vs carat of diamonds",
pch=20, cex=1.5)
abline(dia_mod, lwd = 2, col = "darkorange")
plot(price~carat, data=diamonds, col="darkgrey",
ylab="Price in US dollars",
xlab="Weight of diamond",
main="Price vs carat of diamonds",
pch=20, cex=1.5)
abline(mod_d, lwd = 2, col = "darkorange")
plot(price~carat, data=diamonds, col="darkgrey",
ylab="Price in US dollars",
xlab="Weight of diamond",
main="Price vs carat of diamonds",
pch=20, cex=0.5)
abline(mod_d, lwd = 2, col = "darkorange")
par(mfrow=c(1,2))
plot(fitted(mod_d), resid(mod_d), col = "darkgrey", pch = 20, cex=0.5,
xlab = "Fitted", ylab = "Residuals", main = "Fitted vs Residual Plot")
abline(h = 0, col = "darkorange", lwd = 2)
qqnorm(resid(dia_mod), main = "Q-Q Plot", col = "darkgrey")
par(mfrow=c(1,2))
plot(fitted(mod_d), resid(mod_d), col = "darkgrey", pch = 20, cex=0.5,
xlab = "Fitted", ylab = "Residuals", main = "Fitted vs Residual Plot")
abline(h = 0, col = "darkorange", lwd = 2)
qqnorm(resid(mod_d), main = "Q-Q Plot", col = "darkgrey")
qqline(resid(mod_d), col = "darkorange", lwd = 2)
qplot(price, data = diamonds, bins = 30)
mod_d_log=lm(log(price)~carat, data=diamonds)
plot(price ~ carat, data=diamonds, col="darkgrey",
ylab="Log of price in US dollars",
xlab="Weight of diamond",
main="Price vs carat",
pch=20,
cex=1)
abline(dia_mod_log, lwd = 2, col = "darkorange")
mod_d_log=lm(log(price)~carat, data=diamonds)
plot(price ~ carat, data=diamonds, col="darkgrey",
ylab="Log of price in US dollars",
xlab="Weight of diamond",
main="Price vs carat",
pch=20,
cex=1)
abline(mod_d_log, lwd = 2, col = "darkorange")
mod_d_log=lm(log(price)~carat, data=diamonds)
plot(log(price) ~ carat, data=diamonds, col="darkgrey",
ylab="Log of price in US dollars",
xlab="Weight of diamond",
main="Price vs carat",
pch=20,
cex=1)
abline(mod_d_log, lwd = 2, col = "darkorange")
mod_d_log=lm(log(price)~carat, data=diamonds)
plot(log(price) ~ carat, data=diamonds, col="darkgrey",
ylab="Log of price in US dollars",
xlab="Weight of diamond",
main="Price vs carat",
pch=20,
cex=0.5)
abline(mod_d_log, lwd = 2, col = "darkorange")
mod_d_log=lm(log(price)~carat, data=diamonds)
plot(log(price) ~ carat, data=diamonds, col="darkgrey",
ylab="Log of price in US dollars",
xlab="Weight of diamond",
main="Price vs carat",
pch=20,
cex=0.5)
abline(mod_d_log, lwd = 3, col = "darkorange")
par(mfrow=c(1,2))
plot(fitted(mod_d_log), resid(mod_d_log), col = "darkgrey", pch = 20,
xlab = "Fitted", ylab = "Residuals", main = "Fitted vs Residual")
abline(h = 0, col = "darkorange", lwd = 2)
qqnorm(resid(mod_d_log), main = "Q-Q Plot", col = "darkgrey")
qqline(resid(mod_d_log), col = "darkorange", lwd = 2)
mod_d_log=lm(log(price)~carat, data=diamonds)
par(mfrow=c(1,3))
plot(log(price) ~ carat, data=diamonds, col="darkgrey",
ylab="Log of price in US dollars",
xlab="Weight of diamond",
main="Price vs carat",
pch=20,
cex=0.5)
abline(mod_d_log, lwd = 3, col = "darkorange")
plot(fitted(mod_d_log), resid(mod_d_log), col = "darkgrey", pch = 20,
xlab = "Fitted", ylab = "Residuals", main = "Fitted vs Residual")
abline(h = 0, col = "darkorange", lwd = 2)
qqnorm(resid(mod_d_log), main = "Q-Q Plot", col = "darkgrey")
qqline(resid(mod_d_log), col = "darkorange", lwd = 2)
mod_d_log=lm(log(price)~carat, data=diamonds)
par(mfrow=c(1,3))
plot(log(price) ~ carat, data=diamonds, col="darkgrey",
ylab="Log of price in US dollars",
xlab="Weight of diamond",
main="Price vs carat",
pch=20,
cex=0.5)
abline(mod_d_log, lwd = 3, col = "darkorange")
plot(fitted(mod_d_log), resid(mod_d_log), col = "darkgrey", pch = 20,
xlab = "Fitted", ylab = "Residuals", main = "Fitted vs Residual")
abline(h = 0, col = "darkorange", lwd = 2)
qqnorm(resid(mod_d_log), main = "Q-Q Plot", col = "darkgrey")
qqline(resid(mod_d_log), col = "darkorange", lwd = 2)
mod_d_log_pred=lm(log(price)~log(carat), data=diamonds)
plot(log(price)~log(carat),data=diamonds, col="darkgrey",
ylab="Log-price in US dollars",
xlab="Log-weight of diamond",
main="Log Price vs Log weight",
pch=20,
cex=0.5)
abline(dia_mod_log_pred, lwd = 3, col = "darkorange")
mod_d_log_pred=lm(log(price)~log(carat), data=diamonds)
plot(log(price)~log(carat),data=diamonds, col="darkgrey",
ylab="Log-price in US dollars",
xlab="Log-weight of diamond",
main="Log Price vs Log weight",
pch=20,
cex=0.5)
abline(mod_d_log_pred, lwd = 3, col = "darkorange")
mod_d_log_pred=lm(log(price)~log(carat), data=diamonds)
par(mfrow=c(1,3))
plot(log(price)~log(carat),data=diamonds, col="darkgrey",
ylab="Log-price in US dollars",
xlab="Log-weight of diamond",
main="Log Price vs Log weight",
pch=20,
cex=0.5)
abline(mod_d_log_pred, lwd = 3, col = "darkorange")
plot(fitted(mod_d_log_pred), resid(mod_d_log_pred), col = "darkgrey", pch = 20,
xlab = "Fitted", ylab = "Residuals", main = "Fitted vs Residual")
abline(h = 0, col = "darkorange", lwd = 2)
qqnorm(resid(mod_d_log_pred), main = "Q-Q Plot", col = "darkgrey")
qqline(resid(mod_d_log_pred), col = "darkorange", lwd = 2)
par(mfrow=c(1,3))
plot(price~carat, data=diamonds, col="darkgrey",
ylab="Price in US dollars",
xlab="Weight of diamond",
main="Price vs carat of diamonds",
pch=20, cex=0.5)
abline(mod_d, lwd = 2, col = "darkorange")
plot(fitted(mod_d), resid(mod_d), col = "darkgrey", pch = 20, cex=0.5,
xlab = "Fitted", ylab = "Residuals", main = "Fitted vs Residual Plot")
abline(h = 0, col = "darkorange", lwd = 2)
qqnorm(resid(mod_d), main = "Q-Q Plot", col = "darkgrey")
qqline(resid(mod_d), col = "darkorange", lwd = 2)
exp(predict(mod_d_log_pred, newdata = data.frame("carat"=log(3)), level=0.99, interval="prediction"))
options(scipen = 1, digits = 4, width = 80, fig.alin = "center")
diagnostics(fit_1, plotit = FALSE)$p_val
exp(predict(mod_d_log_pred, newdata = data.frame("carat"=3))
exp(predict(mod_d_log_pred, newdata = data.frame("carat"=3), level=0.99, interval="prediction"))
